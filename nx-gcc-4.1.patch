diff -ur nx-2.0.0-o/nxcomp/RenderExtension.h nx-2.0.0/nxcomp/RenderExtension.h
--- nx-2.0.0-o/nxcomp/RenderExtension.h	2006-06-19 11:55:57.000000000 -0600
+++ nx-2.0.0/nxcomp/RenderExtension.h	2006-07-10 11:13:51.000000000 -0600
@@ -20,22 +20,12 @@
 
 #include "Message.h"
 
-//
-// Set the verbosity level.
-//
-
 #define PANIC
 #define WARNING
 #undef  TEST
 #undef  DEBUG
 #undef  DUMP
 
-//
-// Compression of data part is not enabled as
-// most messages of this type are smaller than
-// the current data size compression threshold.
-//
-
 #define RENDEREXTENSION_ENABLE_CACHE               1
 #define RENDEREXTENSION_ENABLE_DATA                0
 #define RENDEREXTENSION_ENABLE_SPLIT               0
@@ -52,16 +42,8 @@
 #define RENDEREXTENSION_CACHE_THRESHOLD_IF_PROTO_STEP_7            30
 #define RENDEREXTENSION_CACHE_LOWER_THRESHOLD_IF_PROTO_STEP_7      20
 
-//
-// Used to build the table of minor opcodes.
-//
-
 #define RENDEREXTENSION_MINOR_OPCODE_LIMIT         256
 
-//
-// The message class.
-//
-
 class RenderMinorExtensionStore;
 
 class RenderExtensionMessage : public Message
@@ -102,14 +84,6 @@
   {
   }
 
-  //
-  // We consider for this message a data offset of 36,
-  // that is size of the biggest among all requests of
-  // this extension. The most common requests have a
-  // specific differential encoding, others are simply
-  // encoded through an array of int or char caches.
-  //
-
   private:
 
   union
@@ -338,10 +312,6 @@
     return sizeof(RenderExtensionMessage);
   }
 
-  //
-  // Message handling methods.
-  //
-
   public:
 
   virtual Message *create() const
@@ -359,18 +329,8 @@
     delete (RenderExtensionMessage *) message;
   }
 
-  //
-  // Determine if the message must be stored
-  // in the cache.
-  //
-
   virtual int validateMessage(const unsigned char *buffer, int size);
 
-  //
-  // Since protocol step 5 these methods are
-  // specialized in their minor opcode stores.
-  //
-
   virtual int identitySize(const unsigned char *buffer, unsigned int size);
 
   virtual int encodeIdentity(EncodeBuffer &encodeBuffer, const unsigned char *buffer,
@@ -403,10 +363,6 @@
 
   unsigned char opcode_;
 
-  //
-  // Keep pointers to specialized classes.
-  //
-
   RenderMinorExtensionStore *minors_[RENDEREXTENSION_MINOR_OPCODE_LIMIT];
 
   RenderMinorExtensionStore *generic_;
@@ -445,10 +401,6 @@
                                     unsigned int size, md5_state_t *md5_state,
                                         int bigEndian) const = 0;
 
-  //
-  // Internal encode and decode utilities.
-  //
-
   protected:
 
   void encodeLongData(EncodeBuffer &encodeBuffer, const unsigned char *buffer,
diff -ur nx-2.0.0-o/nxviewer/nxviewer/cursor.c nx-2.0.0/nxviewer/nxviewer/cursor.c
--- nx-2.0.0-o/nxviewer/nxviewer/cursor.c	2006-01-09 06:43:52.000000000 -0700
+++ nx-2.0.0/nxviewer/nxviewer/cursor.c	2006-07-10 11:12:36.000000000 -0600
@@ -412,7 +412,6 @@
 	  offset = y * rcWidth + x;
 	  if (rcMask[offset]) {
 	    pos = (char *)&rcSource[offset * bytesPerPixel];
-	    //CopyDataToScreen(pos, x0, y0, 1, 1);
 	  }
 	}
       }
